<!DOCTYPE html>
<html lang="en" class="dark">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Kryos Media Design Course | Progress Tracker</title>
    
    <script src="https://cdn.tailwindcss.com"></script>
    
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    
    <script src="https://cdn.jsdelivr.net/npm/html2canvas@1.4.1/dist/html2canvas.min.js"></script>

    <link rel="icon" href="data:image/svg+xml,<svg xmlns=%22http://www.w3.org/2000/svg%22 viewBox=%220 0 100 100%22><text y=%22.9em%22 font-size=%2290%22>💎</text></svg>">

    <style>
        /* Custom scrollbar for a cleaner look */
        ::-webkit-scrollbar { width: 8px; }
        ::-webkit-scrollbar-track { background: #1f2937; }
        ::-webkit-scrollbar-thumb { background: #4f46e5; border-radius: 4px; }
        ::-webkit-scrollbar-thumb:hover { background: #6366f1; }
        /* Style for disabled module links */
        .module-disabled { cursor: not-allowed; opacity: 0.4; }
    </style>
</head>

<body class="bg-gray-900 text-gray-200 font-sans antialiased">

    <div id="app-container" class="flex flex-col md:flex-row min-h-screen">

        <aside id="sidebar" class="w-full md:w-64 lg:w-72 bg-gray-800 p-4 md:p-6 border-b-2 md:border-b-0 md:border-r-2 border-gray-700 flex-shrink-0">
            <div class="flex items-center gap-4 mb-6">
                 <img src="https://i.ibb.co/L6V2x2q/kryos-logo.png" alt="Kryos Media Logo" class="h-10 w-10 object-contain" onerror="this.onerror=null; this.src='data:image/svg+xml,<svg xmlns=%22http://www.w3.org/2000/svg%22 viewBox=%220 0 100 100%22><text y=%22.9em%22 font-size=%2290%22>💎</text></svg>';">
                <div>
                    <h1 class="text-xl font-bold text-white">Kryos Design Course</h1>
                    <p class="text-xs text-gray-400">Personal Progress Tracker</p>
                </div>
            </div>

            <nav id="module-nav" class="space-y-2">
                </nav>

            <div class="mt-6 pt-6 border-t border-gray-700 space-y-2">
                <a href="#resources" id="resources-link" class="flex items-center gap-3 px-3 py-2 text-gray-300 rounded-md hover:bg-indigo-600 hover:text-white transition-colors">
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" viewBox="0 0 20 20" fill="currentColor"><path d="M9 4.804A7.968 7.968 0 005.5 4c-1.255 0-2.443.29-3.5.804v10.392C2.057 15.71 3.245 16 4.5 16h1.054c.254 0 .506.012.756.035v-8.67c0-.218.02-.435.059-.65h-1.82a.5.5 0 00-.494.575l.504 2.016a.5.5 0 00.494.425h1.251V15.25a7.968 7.968 0 003.5 1.5c1.255 0 2.443-.29 3.5-.804V4.804A7.968 7.968 0 0014.5 4c-1.255 0-2.443.29-3.5.804zm.5 9.852v-8.67c0-.218.02-.435.059-.65h1.82a.5.5 0 00.494-.575l-.504-2.016a.5.5 0 00-.494-.425h-1.251V3.75a7.968 7.968 0 00-3.5-1.5c-1.255 0-2.443.29-3.5.804v10.392C2.057 14.29 3.245 14.5 4.5 14.5h1.054c.254 0 .506-.012.756-.035A7.968 7.968 0 009.5 14.656z" /></svg>
                    <span>Free Resources</span>
                </a>
                <a href="#certificate" id="certificate-link" class="flex items-center gap-3 px-3 py-2 text-gray-300 rounded-md hover:bg-indigo-600 hover:text-white transition-colors module-disabled">
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" viewBox="0 0 20 20" fill="currentColor"><path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd" /></svg>
                    <span>Certificate</span>
                </a>
            </div>
            
            <div id="user-info" class="mt-auto pt-6 text-center text-xs text-gray-500 break-words hidden">
                <p>User ID:</p>
                <p id="user-id-display"></p>
            </div>
        </aside>

        <main id="main-content" class="flex-1 p-4 sm:p-6 md:p-8 lg:p-10 bg-gray-900 overflow-y-auto">
            <div id="loader" class="flex flex-col items-center justify-center h-full">
                <svg class="animate-spin -ml-1 mr-3 h-10 w-10 text-indigo-500" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
                  <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
                  <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
                </svg>
                <p class="mt-4 text-lg font-semibold text-gray-300">Loading Your Progress...</p>
                <p class="text-sm text-gray-400">Initializing Kryos experience...</p>
            </div>
        </main>

    </div>

    <script type="module">
        // Import the functions you need from the SDKs you need
        import { initializeApp } from "https://www.gstatic.com/firebasejs/10.12.2/firebase-app.js";
        import { getAuth, signInAnonymously, onAuthStateChanged } from "https://www.gstatic.com/firebasejs/10.12.2/firebase-auth.js";
        import { getFirestore, doc, getDoc, setDoc } from "https://www.gstatic.com/firebasejs/10.12.2/firebase-firestore.js";

        // const firebaseConfig = {
            apiKey: "YOUR_API_KEY",
            authDomain: "YOUR_AUTH_DOMAIN",
            projectId: "YOUR_PROJECT_ID",
            storageBucket: "YOUR_STORAGE_BUCKET",
            messagingSenderId: "YOUR_MESSAGING_SENDER_ID",
            appId: "YOUR_APP_ID"
        };
        // // Course, Resources, and Application Data
        const courseData = {
          modules: [
            {
              id: 1, title: "Getting Started", description: "Build a strong foundation. Learn the mindset, principles, and essential resources for any aspiring graphic designer.",
              videos: [
                { title: "Why You're Not Growing as a Graphic Designer (Beginners)", url: "http://www.youtube.com/watch?v=xiMSsp7BApk", mandatory: true },
                { title: "BAD Graphic Design: Tips for beginners EP2", url: "http://www.youtube.com/watch?v=f1vq7_E7YnM", mandatory: true },
                { title: "BAD Graphic design: Tips for beginners!", url: "http://www.youtube.com/watch?v=Zx084IJnKkI" },
                { title: "8 Best Free Sites All Graphic Designers Should Know! (2025)", url: "http://www.youtube.com/watch?v=WIu8CdaBxgQ" },
                { title: "The BEST Graphic Design Sites in 2024", url: "http://www.youtube.com/watch?v=Ut-pV8PebWk" },
                { title: "Best 5 FREE Sites All Graphic Designers Should Visit (2024)", url: "http://www.youtube.com/watch?v=woXDftwrLYE" },
                { title: "5 Best FREE Sites All Designers Should Know (2023)", url: "http://www.youtube.com/watch?v=3KtGtEmY15w" },
                { title: "17 BEST Sites All Graphic Designers Should Know! (2024)", url: "http://www.youtube.com/watch?v=mv3OB_X-s1U" },
                { title: "My TOP 3 Essential Tools ALL DESIGNERS SHOULD HAVE", url: "http://www.youtube.com/watch?v=8AWq2DjHgUw" },
              ],
              exercises: [
                { id: "ex1_req", title: "Spot the Design Mistakes", description: "Create a screenshot of a design with mistakes, and mark what’s wrong. Size: 1080×1080 px (square), 300 DPI, JPG or PNG. Include: Highlight or circle at least 3 design issues like font choice, spacing, or alignment. Why it matters: Helps you learn how to spot what makes a design look messy.", required: true },
                { id: "ex1_opt1", title: "Logo Critique Breakdown", optional: true },
                { id: "ex1_opt2", title: "Everyday Object Redesign", optional: true },
              ]
            },
            {
              id: 2, title: "Photoshop & Design Principles", description: "Dive into the most powerful design tool. Learn fundamental Photoshop skills and core design principles to make your work stand out.",
              videos: [
                { title: "Master Photoshop for Beginners With These 9 Tools (2023)", url: "http://www.youtube.com/watch?v=Eitbz_BeDKk", mandatory: true },
                { title: "4 BEST Ways to make Designs POP in Photoshop! (Beginners)", url: "http://www.youtube.com/watch?v=Zetw0QBYUO4", mandatory: true },
                { title: "2 Ways to Make Your Designs POP! (Beginners/Advanced)", url: "http://www.youtube.com/watch?v=6UeMs-bdJOg" },
                { title: "Photoshop Tutorial: Esports Player Banner/Ad Design", url: "http://www.youtube.com/watch?v=tWvsxXE8Jn8" },
                { title: "Photoshop Tutorial: Creating a Clean White Banner Design", url: "http://www.youtube.com/watch?v=YuN_9BgUOWE" },
                { title: "Photoshop Tutorial | Creating Multi-Colored Banners", url: "http://www.youtube.com/watch?v=w8WROkxIiEM" },
                { title: "Photoshop Tutorial: Creative Colorful Abstract Banner Design", url: "http://www.youtube.com/watch?v=sf9gagcU0zQ" },
                { title: "Professional Designer Create a Poster TOTALLY COLORBLIND?!", url: "http://www.youtube.com/watch?v=0xFmwcz-R1o" },
              ],
              exercises: [
                { id: "ex2_req", title: "Photoshop Before & After", description: "Create a side-by-side 'before and after' of a design you improved using Photoshop. Size: 1080×1080 px or 1200×1500 px, 300 DPI, JPG or PNG. Include: Original design vs. your improved version with better spacing, colors, and layout. Why it matters: Teaches you how to apply design basics to make posts look more polished.", required: true },
                { id: "ex2_opt1", title: "Mood Board to Social Graphic", optional: true },
                { id: "ex2_opt2", title: "Surreal Photo Composite", optional: true },
              ]
            },
            {
              id: 3, title: "Typography & Text", description: "Words are pictures. Learn the art of typography to create compelling layouts and communicate your message effectively.",
              videos: [
                { title: "5 Techniques For BETTER Typography/Text Layouts! (Beginners)", url: "http://www.youtube.com/watch?v=qzrKARm3v0w", mandatory: true },
                { title: "11 Photoshop Text Effects AMAZING For BEGINNERS! (2024)", url: "http://www.youtube.com/watch?v=BQcUrAIttjM", mandatory: true },
                { title: "3 Ways to Improve your Typography/Text! (Beginners)", url: "http://www.youtube.com/watch?v=xadOW6Mlvv4" },
                { title: "Choosing the RIGHT Font for Designs!", url: "http://www.youtube.com/watch?v=wU_3FSnMbBw" },
              ],
              exercises: [
                { id: "ex3_req", title: "Font Pairing Challenge", description: "Create a graphic with different font pairings—some good, some bad. Size: 1080×1350 px (portrait), 300 DPI, JPG or PNG. Include: A short quote or phrase styled in 2–3 font combos. One version should be 'wrong.' Why it matters: Helps you understand how fonts work together and what to avoid.", required: true },
                { id: "ex3_opt1", title: "Typographic Quote Poster", optional: true },
                { id: "ex3_opt2", title: "Album Art Typography Focus", optional: true },
              ]
            },
            {
              id: 4, title: "Practical Projects", description: "Apply your knowledge. Follow along with practical, real-world design projects to solidify your skills and build confidence.",
              videos: [
                { title: "REDESIGNING Beginners Photoshop Projects EP5", url: "http://www.youtube.com/watch?v=UEekMo3OWE0", mandatory: true },
                { title: "Creating a Sports Design Poster | Photoshop Tutorial - Let's Create EP1", url: "http://www.youtube.com/watch?v=1u-MreTU_1E", mandatory: true },
                { title: "Creating a F1 Sports Design Poster | Photoshop Tutorial - Let's Create EP2", url: "http://www.youtube.com/watch?v=fIRl0krHq-s" },
                { title: "Creating a Sports Design Poster | Photoshop Tutorial - Let's Create EP6", url: "http://www.youtube.com/watch?v=e0UCqjS6g88" },
              ],
              exercises: [
                { id: "ex4_req", title: "Fake Client Ad Project", description: "Create a fake ad or promo post for a made-up business. Size: 1080×1350 px (portrait), 300 DPI, JPG or PNG. Include: A made-up brand name, logo (even basic), product or service, and a short caption. Why it matters: Prepares you to design for real clients by using your imagination.", required: true },
                { id: "ex4_opt1", title: "Event Flyer Design", optional: true },
                { id: "ex4_opt2", title: "Fictional Startup Web Banner", optional: true },
              ]
            },
            {
              id: 5, title: "Portfolio & Workflow", description: "Prepare for the next step. Learn how to build a professional portfolio, refine your workflow, and get inspired.",
              videos: [
                { title: "These 4 Design Portfolio Tips WILL SAVE YOU!", url: "http://www.youtube.com/watch?v=LOoMczqA784", mandatory: true },
                { title: "Creating a Clean Portfolio", url: "http://www.youtube.com/watch?v=CnPMKaLWga8", mandatory: true },
                { title: "These Design Portfolios are AMAZING!! (Portfolio Reviews)", url: "http://www.youtube.com/watch?v=iOiiCDjwAQc" },
                { title: "These Design Portfolios are INCREDIBLE!! (Portfolio Reviews)", url: "http://www.youtube.com/watch?v=Ii4X8umcPhs" },
                { title: "These Design Portfolios are REALLY Impressive! (Portfolio Reviews)", url: "http://www.youtube.com/watch?v=VlvnyKIDQrU" },
                { title: "Procrastination is Essential in the Design Process (Here's Why)", url: "http://www.youtube.com/watch?v=YAPSqjzhedg" },
                { title: "Graphic Designers Inspiration HACK!", url: "http://www.youtube.com/watch?v=UnknE_U0HZ4" },
              ],
              exercises: [
                { id: "ex5_req", title: "3-Slide Portfolio Intro", description: "Create a 3-slide portfolio preview introducing yourself. Size: 1080×1080 px per slide, 300 DPI, JPG or PNG. Include: Slide 1: Who you are, Slide 2: What you design, Slide 3: Your favorite design. Why it matters: It’s your mini design intro—great for future clients and job applications.", required: true },
                { id: "ex5_opt1", title: "Designer Bio for LinkedIn/Website", optional: true },
                { id: "ex5_opt2", title: "Mini Case Study Slide", optional: true },
              ]
            },
            {
              id: 6, title: "Introduction to Kittl & Design Principles", description: "Explore the powerful Kittl design tool and deepen your understanding of core design principles.",
              videos: [
                { title: "The Basic Principles Of Graphic Design | Free Masterclass Course", url: "http://www.youtube.com/watch?v=aQI95mVeDXw", mandatory: true },
                { title: "Learn KITTL in 7 Minutes (Beginner Tutorial)", url: "http://www.youtube.com/watch?v=4wTJ4ws2-TE", mandatory: true },
                { title: "Updated Full Kittl Masterclass (Every Feature Explained)", url: "http://www.youtube.com/watch?v=FuDKHRWMXbw" },
                { title: "NEW KITTL FEATURES YOU JUST NEED TO TRY 🔥", url: "http://www.youtube.com/watch?v=BruExTI1XgI" },
              ],
              exercises: [
                { id: "ex6_req", title: "Kittl Value Poster", description: "Create a poster based on a value you believe in. Size: 1080×1350 px (portrait), 300 DPI, JPG or PNG. Include: A big word like 'Discipline' or 'Growth,' with visuals and nice layout. Why it matters: Builds your creative voice and teaches design balance.", required: true },
                { id: "ex6_opt1", title: "Vintage T-Shirt Design in Kittl", optional: true },
                { id: "ex6_opt2", title: "Abstract Pattern/Background in Kittl", optional: true },
              ]
            },
            {
              id: 7, title: "Advanced Kittl Techniques & Trends", description: "Master advanced techniques using Kittl and stay ahead with the latest graphic design trends for 2025.",
              videos: [
                { title: "10 Kittl HACKS You Should Know | Plus A Secret Design Technique! 👀", url: "http://www.youtube.com/watch?v=35qM6Yqwo2w", mandatory: true },
                { title: "Graphic Design Trends for 2025! 🚨", url: "http://www.youtube.com/watch?v=eUABnGtzbrY", mandatory: true },
                { title: "2025 Graphic Design Trends You Should Know", url: "http://www.youtube.com/watch?v=uuzDb3E2qlc" },
                { title: "Vectorize your Own Illustrations in just 1 Click 😮", url: "http://www.youtube.com/watch?v=vlKknupgDhE" },
                { title: "White Shades Every Designer Should Know 🤍", url: "http://www.youtube.com/watch?v=wFtH_lFptW0" },
              ],
              exercises: [
                { id: "ex7_req", title: "Trend Rework Design", description: "Create a 'before and after' of one of your older designs updated with 2025 design trends. Size: 1080×1080 px or 1080×1350 px, 300 DPI, JPG or PNG. Include: Old version next to new version. Add bold fonts, grain textures, or trendy layouts. Why it matters: Helps you stay updated and improve past work using new styles.", required: true },
                { id: "ex7_opt1", title: "2025 Trend Application Challenge", optional: true },
                { id: "ex7_opt2", title: "Animated Social Post Concept", optional: true },
              ]
            }
          ],
          resources: {
            "Kryos Guides": [
                { title: "Beginner Graphic Design Tips", channel: "Kryos", desc: "Essential tips to avoid common mistakes.", url: "http://www.youtube.com/watch?v=Zx084IJnKkI", img: "https://img.youtube.com/vi/a622S33weoA/mqdefault.jpg" },
                { title: "Improve Your Typography", channel: "Kryos", desc: "Simple techniques for better text layouts.", url: "http://www.youtube.com/watch?v=qzrKARm3v0w", img: "https://img.youtube.com/vi/O0d41h1T5LI/mqdefault.jpg" },
            ],
            "Mentorship Videos": [
                { title: "Portfolio Reviews", channel: "Kryos", desc: "Learn from reviews of other designers' portfolios.", url: "http://www.youtube.com/watch?v=iOiiCDjwAQc", img: "https://img.youtube.com/vi/1_ayT51T3oM/mqdefault.jpg" },
                { title: "Growing as a Designer", channel: "Kryos", desc: "Overcome common hurdles for beginner designers.", url: "http://www.youtube.com/watch?v=xiMSsp7BApk", img: "https://img.youtube.com/vi/bFca_2sIAf4/mqdefault.jpg" },
            ],
            "Color Tools": [
                { title: "Coolors", channel: "coolors.co", desc: "Fast color scheme generator. Explore trending palettes.", url: "https://coolors.co/", img: "https://i.ibb.co/L51h1T1/coolors.png" },
                { title: "Adobe Color", channel: "Adobe", desc: "Create color themes with the color wheel or browse from Kuler.", url: "https://color.adobe.com/", img: "https://i.ibb.co/yY1hNwn/adobe-color.png" },
            ],
            "Font Tools": [
                { title: "Google Fonts", channel: "Google", desc: "A robust library of free, open-source fonts.", url: "https://fonts.google.com/", img: "https://i.ibb.co/GvxYv2V/google-fonts.png" },
                { title: "Fontjoy", channel: "fontjoy.com", desc: "An AI-powered tool to help you generate font pairings.", url: "https://fontjoy.com/", img: "https://i.ibb.co/tZ56Vb4/fontjoy.png" },
            ],
            "Image & Illustration": [
                { title: "Unsplash", channel: "Unsplash", desc: "The internet’s source of freely-usable images.", url: "https://unsplash.com/", img: "https://i.ibb.co/yQGgH7y/unsplash.png" },
                { title: "Freepik", channel: "Freepik", desc: "High-quality vectors, stock photos, and PSD files.", url: "https://www.freepik.com/", img: "https://i.ibb.co/3s682Cq/freepik.png" },
                 { title: "Pexels", channel: "Pexels", desc: "Free stock photos & videos shared by talented creators.", url: "https://www.pexels.com/", img: "https://i.ibb.co/J3Fq7gY/pexels.png" },
            ],
            "Mockups & Inspiration": [
                { title: "Behance", channel: "Adobe", desc: "Showcase and discover the latest work from top designers.", url: "https://www.behance.net/", img: "https://i.ibb.co/rfnL15G/behance.png" },
                { title: "Dribbble", channel: "Dribbble", desc: "A community for creatives to share, grow, and get hired.", url: "https://dribbble.com/", img: "https://i.ibb.co/mHkC75g/dribbble.png" },
                { title: "Pinterest", channel: "Pinterest", desc: "A visual discovery engine for finding design ideas.", url: "https://www.pinterest.com/", img: "https://i.ibb.co/R9mQp4n/pinterest.png" },
            ],
          }
        };

        // Application State
        let db, auth;
        let currentUser = null;
        let userProgress = {
            completed: {},
            certificateName: ""
        };
        let progressChart = null;
        let currentView = { type: 'module', id: 1 };


        // --- FIREBASE & INITIALIZATION ---
        
        function initializeFirebase() {
            try {
                const app = initializeApp(firebaseConfig);
                auth = getAuth(app);
                db = getFirestore(app);
                handleAuthState();
            } catch (error) {
                console.error("Firebase initialization failed:", error);
                document.getElementById('loader').innerHTML = `<p class="text-red-400">Error: Firebase configuration is invalid. Please check the console.</p>`;
            }
        }

        function handleAuthState() {
            onAuthStateChanged(auth, user => {
                if (user) {
                    // User is signed in anonymously
                    currentUser = user;
                    document.getElementById('user-id-display').textContent = currentUser.uid;
                    document.getElementById('user-info').classList.remove('hidden');
                    loadUserProgress();
                } else {
                    // User is signed out, sign them in anonymously
                    signInAnonymously(auth).catch(error => {
                        console.error("Anonymous sign-in failed:", error);
                        document.getElementById('loader').innerHTML = `<p class="text-red-400">Error: Could not authenticate user. Please check Firebase rules and enable Anonymous Auth.</p>`;
                    });
                }
            });
        }
        
        async function loadUserProgress() {
            const docRef = doc(db, "users", currentUser.uid);
            const docSnap = await getDoc(docRef);

            if (docSnap.exists()) {
                const data = docSnap.data();
                // Merge loaded data with default structure to prevent errors if structure changes
                userProgress.completed = { ...getInitialCompletedState(), ...data.completed };
                userProgress.certificateName = data.certificateName || "";
            } else {
                // Initialize for a new user
                userProgress.completed = getInitialCompletedState();
                userProgress.certificateName = "";
                await saveUserProgress(); // Save initial state to Firestore
            }
            initializeAppUI();
        }

        async function saveUserProgress() {
            if (!currentUser) return;
            const docRef = doc(db, "users", currentUser.uid);
            await setDoc(docRef, userProgress);
        }

        function getInitialCompletedState() {
            const state = {};
            courseData.modules.forEach(module => {
                module.videos.forEach((video, index) => {
                    state[`v-${module.id}-${index}`] = false;
                });
                module.exercises.forEach(exercise => {
                    state[exercise.id] = false;
                });
            });
            return state;
        }
        
        function initializeAppUI() {
            document.getElementById('loader').style.display = 'none';
            document.getElementById('main-content').classList.remove('h-full');
            render();
            setupEventListeners();
        }


        // --- RENDERING LOGIC ---

        function render() {
            updateModuleStates();
            renderSidebar();
            renderMainContent();
            updateProgressChart();
        }
        
        function renderSidebar() {
            const nav = document.getElementById('module-nav');
            nav.innerHTML = courseData.modules.map(module => {
                const isActive = currentView.type === 'module' && currentView.id === module.id;
                const isCompleted = module.isCompleted;
                const isLocked = module.isLocked;

                let icon;
                if(isCompleted) {
                    icon = `<svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 text-green-400" viewBox="0 0 20 20" fill="currentColor"><path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd" /></svg>`;
                } else if (isLocked) {
                    icon = `<svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" viewBox="0 0 20 20" fill="currentColor"><path fill-rule="evenodd" d="M5 9V7a5 5 0 0110 0v2a2 2 0 012 2v5a2 2 0 01-2 2H5a2 2 0 01-2-2v-5a2 2 0 012-2zm8-2v2H7V7a3 3 0 016 0z" clip-rule="evenodd" /></svg>`;
                } else {
                    icon = `<span class="h-5 w-5 flex items-center justify-center text-xs font-bold">${module.id}</span>`;
                }

                return `
                    <a href="#module${module.id}" 
                       data-view-type="module" 
                       data-view-id="${module.id}"
                       class="nav-link flex items-center gap-3 px-3 py-2 rounded-md transition-colors
                           ${isLocked ? 'module-disabled' : 'hover:bg-indigo-600 hover:text-white'}
                           ${isActive ? 'bg-indigo-700 text-white' : 'text-gray-300'}
                           ${isCompleted && !isActive ? 'bg-gray-700/50' : ''}">
                       ${icon}
                       <span>${module.title}</span>
                    </a>
                `;
            }).join('');
        }

        function renderMainContent() {
            const main = document.getElementById('main-content');
            switch(currentView.type) {
                case 'module':
                    const module = courseData.modules.find(m => m.id === currentView.id);
                    main.innerHTML = renderModule(module);
                    break;
                case 'resources':
                    main.innerHTML = renderResources();
                    break;
                case 'certificate':
                    main.innerHTML = renderCertificate();
                    // Add event listener for the input field
                    const nameInput = document.getElementById('certificate-name-input');
                    if (nameInput) {
                        nameInput.addEventListener('input', (e) => {
                            document.getElementById('certificate-name-display').textContent = e.target.value || "Your Name Here";
                            userProgress.certificateName = e.target.value;
                            saveUserProgress();
                        });
                    }
                    const downloadBtn = document.getElementById('download-cert-btn');
                    if (downloadBtn) {
                        downloadBtn.addEventListener('click', downloadCertificate);
                    }
                    break;
            }
             window.scrollTo(0, 0); // Scroll to top on content change
        }

        function renderModule(module) {
            const videosHtml = module.videos.map((video, index) => renderChecklistItem(`v-${module.id}-${index}`, video.title, video.url, video.mandatory)).join('');
            const exercisesHtml = module.exercises.map(ex => renderChecklistItem(ex.id, ex.title, null, ex.required, ex.description)).join('');
            const requiredExercise = module.exercises.find(e => e.required);
            const isAtLeastOneOptionalDone = module.exercises.some(e => e.optional && userProgress.completed[e.id]);
            const isRequiredDone = userProgress.completed[requiredExercise.id];
            
            // Allow progress if the required exercise OR at least one optional exercise is done.
            const exerciseRequirementMet = isRequiredDone || isAtLeastOneOptionalDone;

            return `
                <div class="space-y-8">
                    <div class="relative bg-gray-800 p-6 rounded-lg flex flex-col sm:flex-row items-center gap-6">
                        <div class="relative w-32 h-32">
                            <canvas id="progress-chart"></canvas>
                            <div id="progress-text" class="absolute inset-0 flex items-center justify-center text-3xl font-bold text-white"></div>
                        </div>
                        <div class="text-center sm:text-left">
                            <h2 class="text-3xl font-extrabold text-white">${module.title}</h2>
                            <p class="mt-2 text-gray-300 max-w-xl">${module.description}</p>
                        </div>
                    </div>
                    
                    <div class="grid grid-cols-1 lg:grid-cols-2 gap-8">
                        <div class="bg-gray-800 p-6 rounded-lg">
                            <h3 class="text-xl font-bold text-indigo-400 border-b border-gray-700 pb-3 mb-4">🎥 Video Content</h3>
                            <div class="space-y-3">${videosHtml}</div>
                        </div>
                        
                        <div class="bg-gray-800 p-6 rounded-lg">
                            <h3 class="text-xl font-bold text-indigo-400 border-b border-gray-700 pb-3 mb-4">✏️ Practical Exercises</h3>
                            <p class="text-sm text-gray-400 mb-4">Complete at least <strong>one</strong> exercise to help unlock the next module.</p>
                            <div class="space-y-3">${exercisesHtml}</div>
                            
                            <div class="mt-6 pt-6 border-t border-gray-700 text-center">
                                <a href="https://www.dropbox.com/scl/fo/u1sj88bhfvfssn2u4lufi/AB3yFqB8zPOEVWk9F8p80gQ?rlkey=t9d5vpk6k6w0efhnb79f2w30j&st=v8z2i15q&dl=0" target="_blank" class="inline-block bg-indigo-600 text-white font-bold py-3 px-6 rounded-lg hover:bg-indigo-700 transition-transform transform hover:scale-105">
                                    Upload Your Work Here
                                </a>
                                <p class="text-xs text-gray-500 mt-2">Share your creations in the Kryos community folder!</p>
                            </div>
                        </div>
                    </div>
                </div>
            `;
        }
        
        function renderChecklistItem(id, title, url, isMandatory, description = null) {
            const isChecked = userProgress.completed[id];
            const content = url 
                ? `<a href="${url}" target="_blank" class="hover:underline">${title}</a>`
                : `<span class="cursor-pointer" onclick="document.getElementById('desc-${id}').classList.toggle('hidden')">${title}</span>`;

            return `
                <div class="flex items-start gap-3 p-2 rounded-md ${isChecked ? 'bg-green-900/30' : ''}">
                    <input type="checkbox" id="${id}" data-item-id="${id}" class="checklist-item mt-1 h-5 w-5 rounded bg-gray-700 border-gray-600 text-indigo-500 focus:ring-indigo-500" ${isChecked ? 'checked' : ''}>
                    <div class="flex-1">
                        <label for="${id}" class="text-gray-200 ${isChecked ? 'line-through text-gray-400' : ''} ${isMandatory ? 'font-semibold' : ''}">
                            ${content}
                            ${isMandatory ? '<span class="ml-2 text-xs bg-indigo-500/50 text-indigo-200 px-2 py-0.5 rounded-full">Mandatory</span>' : ''}
                            ${description ? `<p id="desc-${id}" class="hidden mt-2 text-sm text-gray-400">${description}</p>` : ''}
                        </label>
                    </div>
                </div>
            `;
        }

        function renderResources() {
            const categoriesHtml = Object.keys(courseData.resources).map(category => {
                const itemsHtml = courseData.resources[category].map(item => `
                    <a href="${item.url}" target="_blank" class="block bg-gray-800 rounded-lg overflow-hidden hover:ring-2 hover:ring-indigo-500 transition-all duration-200 group">
                        <img src="${item.img}" alt="${item.title}" class="w-full h-32 object-cover" onerror="this.style.display='none'; this.parentElement.insertAdjacentHTML('afterbegin', '<div class=\\'w-full h-32 bg-gray-700 flex items-center justify-center\\'><p class=\\'text-gray-500\\'>No Image</p></div>');">
                        <div class="p-4">
                            <h4 class="font-bold text-white truncate group-hover:text-indigo-400">${item.title}</h4>
                            <p class="text-sm text-gray-400">${item.channel}</p>
                            <p class="text-xs text-gray-500 mt-2">${item.desc}</p>
                        </div>
                    </a>
                `).join('');
                return `
                    <div>
                        <h3 class="text-2xl font-bold text-indigo-400 mb-4">${category}</h3>
                        <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-4">
                            ${itemsHtml}
                        </div>
                    </div>
                `;
            }).join('');

            return `
                <h2 class="text-4xl font-extrabold text-white mb-8">💎 Free Design Resources</h2>
                <div class="space-y-10">${categoriesHtml}</div>
            `;
        }

        function renderCertificate() {
            return `
                <div class="text-center">
                    <h2 class="text-4xl font-extrabold text-white mb-2">Congratulations! 🎉</h2>
                    <p class="text-gray-300 mb-8">You have completed the Kryos Media Design Course. Personalize and download your certificate below.</p>

                    <div id="certificate-wrapper" class="max-w-4xl mx-auto bg-gray-800 p-6 rounded-lg">
                        <div id="certificate" class="bg-white text-gray-800 p-8 sm:p-12 aspect-[1.414/1] relative border-8 border-indigo-500 flex flex-col justify-center items-center">
                            <div class="absolute top-4 left-4 right-4 bottom-4 border-2 border-indigo-300"></div>
                            <img src="https://i.ibb.co/L6V2x2q/kryos-logo.png" alt="Kryos Media Logo" class="h-16 mb-4 z-10" onerror="this.onerror=null; this.src='data:image/svg+xml,<svg xmlns=%22http://www.w3.org/2000/svg%22 viewBox=%220 0 100 100%22><text y=%22.9em%22 font-size=%2290%22>💎</text></svg>';">
                            <h3 class="text-2xl font-semibold text-gray-600 tracking-widest z-10">CERTIFICATE OF COMPLETION</h3>
                            <p class="text-lg mt-4 z-10">This certifies that</p>
                            <p id="certificate-name-display" class="text-4xl font-bold text-indigo-600 my-4 py-2 border-b-2 border-gray-300 z-10">${userProgress.certificateName || "Your Name Here"}</p>
                            <p class="text-lg text-center max-w-md z-10">has successfully completed the <strong>Kryos Media Design Course</strong>, demonstrating proficiency in graphic design principles, software usage, and project execution.</p>
                            <div class="flex justify-between w-full mt-auto pt-6 text-sm z-10">
                                <div class="text-center">
                                    <p class="font-bold border-b-2 border-gray-400">Kryos Media</p>
                                    <p>Instructor</p>
                                </div>
                                <div class="text-center">
                                    <p class="font-bold border-b-2 border-gray-400">${new Date().toLocaleDateString()}</p>
                                    <p>Date of Completion</p>
                                </div>
                            </div>
                        </div>
                    </div>
                    
                    <div class="mt-8">
                        <input type="text" id="certificate-name-input" placeholder="Enter your full name" value="${userProgress.certificateName}" class="bg-gray-700 border border-gray-600 text-white text-center text-lg rounded-md px-4 py-2 w-full max-w-md mx-auto focus:ring-indigo-500 focus:border-indigo-500">
                        <button id="download-cert-btn" class="mt-4 bg-green-600 text-white font-bold py-3 px-8 rounded-lg hover:bg-green-700 transition-transform transform hover:scale-105">
                            Download Certificate (PNG)
                        </button>
                    </div>
                </div>
            `;
        }

        // --- PROGRESS & STATE LOGIC ---

        function updateModuleStates() {
            let allMandatoryCompleted = true;
            courseData.modules.forEach((module, index) => {
                const mandatoryVideos = module.videos.slice(0, 2);
                const requiredExercise = module.exercises.find(e => e.required);
                
                const allMandatoryVideosDone = mandatoryVideos.every((v, i) => userProgress.completed[`v-${module.id}-${i}`]);
                const requiredExerciseDone = userProgress.completed[requiredExercise.id];
                const atLeastOneExerciseDone = module.exercises.some(e => userProgress.completed[e.id]);

                module.isCompleted = allMandatoryVideosDone && requiredExerciseDone;

                if (index > 0) {
                    const prevModule = courseData.modules[index - 1];
                    const prevMandatoryVideos = prevModule.videos.slice(0, 2);
                    const prevRequiredExercise = prevModule.exercises.find(e => e.required);
                    const prevAtLeastOneExerciseDone = prevModule.exercises.some(e => userProgress.completed[e.id]);

                    const prevMandatoryVideosDone = prevMandatoryVideos.every((v, i) => userProgress.completed[`v-${prevModule.id}-${i}`]);
                    
                    module.isLocked = !(prevMandatoryVideosDone && prevAtLeastOneExerciseDone);
                } else {
                    module.isLocked = false;
                }
                
                if (!module.isCompleted) {
                    allMandatoryCompleted = false;
                }
            });

            const certLink = document.getElementById('certificate-link');
            if (allMandatoryCompleted) {
                certLink.classList.remove('module-disabled');
            } else {
                certLink.classList.add('module-disabled');
            }
        }

        function calculateOverallProgress() {
            const mandatoryItems = [];
            courseData.modules.forEach(module => {
                mandatoryItems.push(`v-${module.id}-0`, `v-${module.id}-1`);
                const reqEx = module.exercises.find(e => e.required);
                mandatoryItems.push(reqEx.id);
            });
            const completedCount = mandatoryItems.filter(id => userProgress.completed[id]).length;
            return Math.round((completedCount / mandatoryItems.length) * 100);
        }

        function updateProgressChart() {
            const progress = calculateOverallProgress();
            const progressText = document.getElementById('progress-text');
            if (progressText) {
                progressText.textContent = `${progress}%`;
            }

            const canvas = document.getElementById('progress-chart');
            if (!canvas) return;

            const chartData = {
                datasets: [{
                    data: [progress, 100 - progress],
                    backgroundColor: ['#4f46e5', '#374151'],
                    borderWidth: 0,
                    borderRadius: progress === 100 ? 0 : { outerStart: 50, innerStart: 50, outerEnd: 0, innerEnd: 0 }
                }]
            };

            if (progressChart) {
                progressChart.data.datasets[0].data = [progress, 100 - progress];
                progressChart.update();
            } else {
                progressChart = new Chart(canvas, {
                    type: 'doughnut',
                    data: chartData,
                    options: {
                        responsive: true,
                        cutout: '80%',
                        plugins: {
                            legend: { display: false },
                            tooltip: { enabled: false }
                        },
                        animation: {
                            animateRotate: true
                        }
                    }
                });
            }
        }


        // --- EVENT HANDLING & ACTIONS ---

        function setupEventListeners() {
            document.body.addEventListener('change', async (e) => {
                if (e.target.matches('.checklist-item')) {
                    const itemId = e.target.dataset.itemId;
                    userProgress.completed[itemId] = e.target.checked;
                    await saveUserProgress();
                    render(); // Re-render to update lock states and visuals
                }
            });

            document.body.addEventListener('click', (e) => {
                const navLink = e.target.closest('.nav-link');
                const resourcesLink = e.target.closest('#resources-link');
                const certificateLink = e.target.closest('#certificate-link');

                if (navLink && !navLink.classList.contains('module-disabled')) {
                    e.preventDefault();
                    currentView = { 
                        type: navLink.dataset.viewType,
                        id: parseInt(navLink.dataset.viewId, 10)
                    };
                    render();
                } else if (resourcesLink) {
                    e.preventDefault();
                    currentView = { type: 'resources' };
                    render();
                } else if (certificateLink && !certificateLink.classList.contains('module-disabled')) {
                    e.preventDefault();
                    currentView = { type: 'certificate' };
                    render();
                }
            });
        }
        
        function downloadCertificate() {
            const certificateNode = document.getElementById('certificate');
            const downloadButton = document.getElementById('download-cert-btn');
            downloadButton.textContent = 'Generating...';
            downloadButton.disabled = true;

            html2canvas(certificateNode, { 
                scale: 2, 
                useCORS: true, 
                backgroundColor: null 
            }).then(canvas => {
                const link = document.createElement('a');
                link.download = `Kryos_Certificate_${userProgress.certificateName.replace(/\s/g, '_') || 'Completion'}.png`;
                link.href = canvas.toDataURL('image/png');
                link.click();
                downloadButton.textContent = 'Download Certificate (PNG)';
                downloadButton.disabled = false;
            }).catch(err => {
                console.error('Error generating certificate:', err);
                alert('Could not generate certificate. Please try again.');
                downloadButton.textContent = 'Download Certificate (PNG)';
                downloadButton.disabled = false;
            });
        }


        // --- START THE APP ---
        initializeFirebase();

    </script>
</body>
</html>
